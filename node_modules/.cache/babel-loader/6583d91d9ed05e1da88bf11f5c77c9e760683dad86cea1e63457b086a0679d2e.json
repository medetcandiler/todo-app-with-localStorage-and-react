{"ast":null,"code":"var _jsxFileName = \"/Users/meddo/Documents/GitHub/To-do-list-with-react/to-do-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n// import './App.css';\nimport Form from './components/form';\nimport List from './components/list';\nimport Footer from './components/footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [list, setList] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filtered, setFiltered] = useState([]);\n  useEffect(() => {\n    filteredHandler();\n  }, [list, status]);\n  const filteredHandler = () => {\n    switch (status) {\n      case 'active':\n        setFiltered(list.filter(item => item.completed === false));\n        break;\n      case 'completed':\n        setFiltered(list.filter(item => item.completed === true));\n        break;\n      default:\n        setFiltered(list);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"todoapp\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      setList: setList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      list: list,\n      setList: setList,\n      filtered: filtered,\n      setFiltered: setFiltered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      status: status,\n      setStatus: setStatus,\n      filtered: filtered,\n      setFiltered: setFiltered,\n      list: list,\n      setList: setList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"uCiJ97+ASjZ+d1uXiE/kGf2jb8c=\");\n_c = App;\nexport default App;\n\n// useEffect(() => {\n//     setList(JSON.parse(localStorage.getItem('item')))\n// }, [])\n\n// useEffect(() => {\n//     localStorage.setItem('item', JSON.stringify(list))\n// }, [list])\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Form","List","Footer","App","list","setList","status","setStatus","filtered","setFiltered","filteredHandler","filter","item","completed"],"sources":["/Users/meddo/Documents/GitHub/To-do-list-with-react/to-do-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n// import './App.css';\nimport Form from './components/form'\nimport List from './components/list'\nimport Footer from './components/footer';\n\nfunction App() {\n    const [list, setList] = useState([]);\n    const [status, setStatus] = useState('all')\n    const [filtered, setFiltered] = useState([])\n\n\n    useEffect(() => {\n        filteredHandler()\n    }, [list, status])\n\n    const filteredHandler = () => {\n        switch (status) {\n            case ('active'):\n                setFiltered(list.filter((item) => item.completed === false));\n                break;\n            case ('completed'):\n                setFiltered(list.filter((item) => item.completed === true));\n                break;\n            default:\n                setFiltered(list);\n        }\n    }\n\n\n    return (\n        <section className='todoapp'>\n            <Form\n                setList={setList}\n            />\n            <List\n                list={list}\n                setList={setList}\n                filtered={filtered}\n                setFiltered={setFiltered}\n            />\n            <Footer\n                status={status}\n                setStatus={setStatus}\n                filtered={filtered}\n                setFiltered={setFiltered}\n                list={list}\n                setList={setList}\n            />\n        </section >\n    );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n // useEffect(() => {\n    //     setList(JSON.parse(localStorage.getItem('item')))\n    // }, [])\n\n    // useEffect(() => {\n    //     localStorage.setItem('item', JSON.stringify(list))\n    // }, [list])"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;AACA,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAEzC,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAG5CC,SAAS,CAAC,MAAM;IACZW,eAAe,EAAE;EACrB,CAAC,EAAE,CAACN,IAAI,EAAEE,MAAM,CAAC,CAAC;EAElB,MAAMI,eAAe,GAAG,MAAM;IAC1B,QAAQJ,MAAM;MACV,KAAM,QAAQ;QACVG,WAAW,CAACL,IAAI,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,KAAK,KAAK,CAAC,CAAC;QAC5D;MACJ,KAAM,WAAW;QACbJ,WAAW,CAACL,IAAI,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,KAAK,IAAI,CAAC,CAAC;QAC3D;MACJ;QACIJ,WAAW,CAACL,IAAI,CAAC;IAAC;EAE9B,CAAC;EAGD,oBACI;IAAS,SAAS,EAAC,SAAS;IAAA,wBACxB,QAAC,IAAI;MACD,OAAO,EAAEC;IAAQ;MAAA;MAAA;MAAA;IAAA,QACnB,eACF,QAAC,IAAI;MACD,IAAI,EAAED,IAAK;MACX,OAAO,EAAEC,OAAQ;MACjB,QAAQ,EAAEG,QAAS;MACnB,WAAW,EAAEC;IAAY;MAAA;MAAA;MAAA;IAAA,QAC3B,eACF,QAAC,MAAM;MACH,MAAM,EAAEH,MAAO;MACf,SAAS,EAAEC,SAAU;MACrB,QAAQ,EAAEC,QAAS;MACnB,WAAW,EAAEC,WAAY;MACzB,IAAI,EAAEL,IAAK;MACX,OAAO,EAAEC;IAAQ;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAEnB;AAAC,GA7CQF,GAAG;AAAA,KAAHA,GAAG;AA+CZ,eAAeA,GAAG;;AAUjB;AACG;AACA;;AAEA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}