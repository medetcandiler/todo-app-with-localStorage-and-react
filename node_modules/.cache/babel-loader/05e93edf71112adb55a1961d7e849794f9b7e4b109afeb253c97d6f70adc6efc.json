{"ast":null,"code":"var _jsxFileName = \"/Users/meddo/Documents/GitHub/To-do-list-with-react/to-do-app/src/components/footer/index.js\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Footer(_ref) {\n  let {\n    filtered,\n    list,\n    status,\n    setStatus,\n    setList\n  } = _ref;\n  const statusHandler = e => {\n    setStatus(e.target.value);\n  };\n  completed = list.filter(el => el.completed === true);\n  const clearHandler = () => {\n    setList(list.filter(el => el.completed === false));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todo-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [filtered.length, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), \"items\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"filters\",\n        onClick: statusHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#/\",\n            name: \"all\",\n            className: status === 'all' ? 'selected' : '',\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#/\",\n            className: status === 'active' ? 'selected' : '',\n            name: \"active\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#/\",\n            className: status === 'completed' ? 'selected' : '',\n            name: \"completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: completed.length === 0 ? 'hidden' : 'clear-completed',\n        onClick: clearHandler,\n        children: \"Clear completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Footer;\nexport default Footer;\n\n// const completed = filtered.filter(item => item.completed === true);\n\n// function statusHandler(e) {\n//     setStatus(e.target.name);\n// }\n\n// const clearHandler = () => {\n//     setList(list.filter((item) => item.completed === false));\n// }\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["useState","Footer","filtered","list","status","setStatus","setList","statusHandler","e","target","value","completed","filter","el","clearHandler","length"],"sources":["/Users/meddo/Documents/GitHub/To-do-list-with-react/to-do-app/src/components/footer/index.js"],"sourcesContent":["import { useState } from 'react';\n\n\n\nfunction Footer({ filtered, list, status, setStatus, setList }) {\n\n\n    const statusHandler = (e) => {\n        setStatus(e.target.value)\n    }\n\n    completed= list.filter(el => el.completed === true)\n\n    const clearHandler = () => {\n        setList(list.filter(el => el.completed === false))\n    }\n\n    return (\n        <>\n            <footer className=\"footer\">\n                <span className=\"todo-count\">\n                    <strong>{filtered.length} </strong>items\n                </span>\n\n                <ul className=\"filters\" onClick={statusHandler} >\n                    <li >\n                        <a href=\"#/\" name='all' className={status === 'all' ? 'selected' : ''} >All</a>\n                    </li>\n                    <li>\n                        <a href=\"#/\" className={status === 'active' ? 'selected' : ''} name='active' >Active</a>\n                    </li>\n                    <li>\n                        <a href=\"#/\" className={status === 'completed' ? 'selected' : ''} name='completed' >Completed</a>\n                    </li>\n                </ul>\n\n                <button className={completed.length === 0 ? 'hidden' : 'clear-completed'} onClick={clearHandler}>\n                    Clear completed\n                </button>\n            </footer>\n        </>\n    );\n}\n\nexport default Footer;\n\n\n\n// const completed = filtered.filter(item => item.completed === true);\n\n// function statusHandler(e) {\n//     setStatus(e.target.name);\n// }\n\n// const clearHandler = () => {\n//     setList(list.filter((item) => item.completed === false));\n// }"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAIjC,SAASC,MAAM,OAAiD;EAAA,IAAhD;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAQ,CAAC;EAG1D,MAAMC,aAAa,GAAIC,CAAC,IAAK;IACzBH,SAAS,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAEDC,SAAS,GAAER,IAAI,CAACS,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACF,SAAS,KAAK,IAAI,CAAC;EAEnD,MAAMG,YAAY,GAAG,MAAM;IACvBR,OAAO,CAACH,IAAI,CAACS,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACF,SAAS,KAAK,KAAK,CAAC,CAAC;EACtD,CAAC;EAED,oBACI;IAAA,uBACI;MAAQ,SAAS,EAAC,QAAQ;MAAA,wBACtB;QAAM,SAAS,EAAC,YAAY;QAAA,wBACxB;UAAA,WAAST,QAAQ,CAACa,MAAM,EAAC,GAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAS,SACvC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO,eAEP;QAAI,SAAS,EAAC,SAAS;QAAC,OAAO,EAAER,aAAc;QAAA,wBAC3C;UAAA,uBACI;YAAG,IAAI,EAAC,IAAI;YAAC,IAAI,EAAC,KAAK;YAAC,SAAS,EAAEH,MAAM,KAAK,KAAK,GAAG,UAAU,GAAG,EAAG;YAAA,UAAE;UAAG;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAC9E,eACL;UAAA,uBACI;YAAG,IAAI,EAAC,IAAI;YAAC,SAAS,EAAEA,MAAM,KAAK,QAAQ,GAAG,UAAU,GAAG,EAAG;YAAC,IAAI,EAAC,QAAQ;YAAA,UAAE;UAAM;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QACvF,eACL;UAAA,uBACI;YAAG,IAAI,EAAC,IAAI;YAAC,SAAS,EAAEA,MAAM,KAAK,WAAW,GAAG,UAAU,GAAG,EAAG;YAAC,IAAI,EAAC,WAAW;YAAA,UAAE;UAAS;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAChG;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ,eAEL;QAAQ,SAAS,EAAEO,SAAS,CAACI,MAAM,KAAK,CAAC,GAAG,QAAQ,GAAG,iBAAkB;QAAC,OAAO,EAAED,YAAa;QAAA,UAAC;MAEjG;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ,iBACV;AAEX;AAAC,KAtCQb,MAAM;AAwCf,eAAeA,MAAM;;AAIrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}